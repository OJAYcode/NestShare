@model Thrift.Models.SavingsGoal
@{
    ViewData["Title"] = Model?.Name ?? "Goal Details";
    var progressPercentage = Model?.TargetAmount > 0 ? (Model.CurrentAmount / Model.TargetAmount) * 100 : 0;
    var isNearDeadline = Model?.TargetDate.HasValue == true && Model.TargetDate.Value <= DateTime.Now.AddDays(30);
    var daysRemaining = Model?.TargetDate.HasValue == true ? (Model.TargetDate.Value - DateTime.Now).Days : 0;
    var dailyTargetAmount = daysRemaining > 0 && Model != null ? (Model.TargetAmount - Model.CurrentAmount) / daysRemaining : 0;
}

<style>
    /* Advanced animations and effects */
    @@keyframes fadeInUp {
        from { opacity: 0; transform: translateY(30px); }
        to { opacity: 1; transform: translateY(0); }
    }
    
    @@keyframes slideInRight {
        from { opacity: 0; transform: translateX(30px); }
        to { opacity: 1; transform: translateX(0); }
    }
    
    @@keyframes float {
        0%, 100% { transform: translateY(0px); }
        50% { transform: translateY(-10px); }
    }
    
    @@keyframes shimmer {
        0% { background-position: -200px 0; }
        100% { background-position: calc(200px + 100%) 0; }
    }
    
    @@keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
    }
    
    @@keyframes glow {
        0%, 100% { box-shadow: 0 0 20px rgba(139, 92, 246, 0.3); }
        50% { box-shadow: 0 0 30px rgba(139, 92, 246, 0.6); }
    }
    
    .animate-fadeInUp { animation: fadeInUp 0.8s ease-out forwards; }
    .animate-slideInRight { animation: slideInRight 0.8s ease-out forwards; }
    .animate-float { animation: float 6s ease-in-out infinite; }
    .animate-pulse-custom { animation: pulse 2s ease-in-out infinite; }
    .animate-glow { animation: glow 3s ease-in-out infinite; }
    
    /* Staggered animations */
    .stagger-1 { animation-delay: 0.1s; }
    .stagger-2 { animation-delay: 0.2s; }
    .stagger-3 { animation-delay: 0.3s; }
    .stagger-4 { animation-delay: 0.4s; }
    
    /* Glass morphism effects */
    .glass-card {
        background: rgba(255, 255, 255, 0.25);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.18);
        box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    }
    
    .gradient-bg {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }
    
    .gradient-purple {
        background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);
    }
    
    .gradient-text {
        background: linear-gradient(135deg, #8b5cf6, #7c3aed);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
    }
    
    /* 3D Card effects */
    .card-3d {
        transform-style: preserve-3d;
        transition: all 0.3s ease;
    }
    
    .card-3d:hover {
        transform: rotateY(5deg) rotateX(5deg) translateZ(10px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }
    
    /* Progress bar animations */
    .progress-animated {
        position: relative;
        overflow: hidden;
    }
      .progress-animated::after {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
        animation: shimmer 2s infinite;
    }
    
    /* Button visibility fixes */
    .btn-gradient, a[class*="bg-gradient-to-r"], button[class*="bg-gradient-to-r"] {
        opacity: 1 !important;
        visibility: visible !important;
        display: inline-flex !important;
        background-clip: padding-box !important;
    }
    
    .btn-gradient:hover, a[class*="bg-gradient-to-r"]:hover, button[class*="bg-gradient-to-r"]:hover {
        opacity: 1 !important;
        transform: scale(1.05) !important;
    }
    
    /* Ensure button text is always visible */
    .btn-gradient, a[class*="bg-gradient-to-r"], button[class*="bg-gradient-to-r"] {
        color: white !important;
        text-decoration: none !important;
        font-weight: 600 !important;
    }
    
    /* Interactive elements */
    .interactive-card {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        cursor: pointer;
    }
    
    .interactive-card:hover {
        transform: translateY(-8px) scale(1.02);
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
    }
    
    /* Chart container */
    .chart-container {
        position: relative;
        height: 300px;
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        border-radius: 15px;
        padding: 20px;
    }
    
    /* Achievement badges */
    .achievement-badge {
        background: linear-gradient(135deg, #ffd700, #ffed4e);
        border-radius: 50%;
        width: 60px;
        height: 60px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #8b5a00;
        font-size: 24px;
        box-shadow: 0 4px 15px rgba(255, 215, 0, 0.3);
    }
    
    /* Timeline styles */
    .timeline {
        position: relative;
        padding-left: 30px;
    }
    
    .timeline::before {
        content: '';
        position: absolute;
        left: 10px;
        top: 0;
        bottom: 0;
        width: 2px;
        background: linear-gradient(to bottom, #8b5cf6, #7c3aed);
    }
    
    .timeline-item {
        position: relative;
        margin-bottom: 20px;
        padding-left: 20px;
    }
    
    .timeline-item::before {
        content: '';
        position: absolute;
        left: -26px;
        top: 8px;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: #8b5cf6;
        border: 3px solid #fff;
        box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.3);
    }
    
    /* Floating background elements */
    .floating-icon {
        position: absolute;
        animation: float 8s ease-in-out infinite;
        opacity: 0.1;
    }
    
    .floating-icon:nth-child(1) { top: 10%; left: 85%; animation-delay: 0s; }
    .floating-icon:nth-child(2) { top: 20%; left: 10%; animation-delay: 2s; }
    .floating-icon:nth-child(3) { top: 60%; left: 90%; animation-delay: 4s; }
    .floating-icon:nth-child(4) { top: 80%; left: 15%; animation-delay: 6s; }
</style>

<div class="min-h-screen bg-gradient-to-br from-purple-50 via-indigo-50 to-pink-50 relative overflow-hidden">
    <!-- Floating background elements -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
        <div class="floating-icon text-purple-200">
            <i class="fas fa-piggy-bank text-6xl"></i>
        </div>
        <div class="floating-icon text-indigo-200">
            <i class="fas fa-chart-line text-5xl"></i>
        </div>
        <div class="floating-icon text-pink-200">
            <i class="fas fa-trophy text-4xl"></i>
        </div>
        <div class="floating-icon text-purple-200">
            <i class="fas fa-target text-5xl"></i>
        </div>
    </div>    <div class="container mx-auto px-4 py-8 relative z-10">
        <!-- Success Message Display -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="mb-6 animate-fadeInUp">
                <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg relative" role="alert">
                    <div class="flex items-center">
                        <i class="fas fa-check-circle mr-3 text-lg"></i>
                        <span class="block sm:inline">@TempData["SuccessMessage"]</span>
                    </div>
                </div>
            </div>
        }

        <!-- Enhanced Header Section -->
        <div class="flex flex-col lg:flex-row justify-between items-start lg:items-center mb-8 animate-fadeInUp">
            <div class="mb-6 lg:mb-0">
                <div class="flex items-center mb-4">
                    <a asp-action="Index" class="text-purple-600 hover:text-purple-800 mr-4 transition-colors duration-300">                <i class="fas fa-arrow-left text-xl"></i>
                    </a>
                    <div class="p-3 bg-gradient-to-br from-purple-500 to-indigo-600 rounded-lg text-white mr-4 animate-float">
                        @{
                            var iconClass = !string.IsNullOrEmpty(Model?.Icon) ? Model.Icon : "piggy-bank";
                            if (!iconClass.StartsWith("fas fa-"))
                            {
                                iconClass = "fas fa-" + iconClass;
                            }
                        }
                        <i class="@iconClass text-2xl"></i>
                    </div>
                    <div>
                        <h1 class="text-4xl font-bold gradient-text">@Model?.Name</h1>
                        <p class="text-gray-600 text-lg">@Model?.Category Goal</p>
                    </div>
                </div>
                
                <!-- Status Badges -->
                <div class="flex gap-3">
                    <span class="px-4 py-2 text-sm font-semibold rounded-full 
                        @(Model?.Status == "Active" ? "bg-green-100 text-green-800" : 
                          Model?.Status == "Paused" ? "bg-yellow-100 text-yellow-800" : 
                          Model?.Status == "Completed" ? "bg-blue-100 text-blue-800" : "bg-red-100 text-red-800")">
                        @Model?.Status
                    </span>
                    <span class="px-4 py-2 text-sm font-semibold rounded-full 
                        @(Model?.Priority == "Low" ? "bg-gray-100 text-gray-800" : 
                          Model?.Priority == "Medium" ? "bg-blue-100 text-blue-800" : 
                          Model?.Priority == "High" ? "bg-orange-100 text-orange-800" : "bg-red-100 text-red-800")">
                        @Model?.Priority Priority
                    </span>
                    @if (isNearDeadline && Model?.Status == "Active")
                    {
                        <span class="px-4 py-2 text-sm font-semibold rounded-full bg-red-100 text-red-800 animate-pulse-custom">
                            <i class="fas fa-exclamation-triangle mr-1"></i>Due Soon
                        </span>
                    }
                </div>
            </div>            <!-- Action Buttons -->
            <div class="flex flex-col sm:flex-row gap-3">
                <a asp-action="AddTransaction" asp-route-id="@Model?.Id" class="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white font-semibold rounded-lg hover:from-green-600 hover:to-green-700 transition-all duration-300 shadow-lg hover:shadow-xl text-center">
                    <i class="fas fa-plus mr-2"></i>Add Funds
                </a>
                <a asp-action="Edit" asp-route-id="@Model?.Id" class="px-6 py-3 bg-gradient-to-r from-purple-500 to-indigo-500 text-white font-semibold rounded-lg hover:from-purple-600 hover:to-indigo-600 transition-all duration-300 shadow-lg hover:shadow-xl text-center">
                    <i class="fas fa-edit mr-2"></i>Edit Goal
                </a>
                <button id="shareBtn" class="px-6 py-3 bg-white border-2 border-purple-500 text-purple-600 font-semibold rounded-lg hover:bg-purple-50 transition-all duration-300">
                    <i class="fas fa-share mr-2"></i>Share
                </button>
            </div>
        </div>

        <!-- Main Content Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Left Column - Main Content -->
            <div class="lg:col-span-2 space-y-8">
                <!-- Progress Overview Card -->
                <div class="bg-white rounded-xl shadow-lg p-8 animate-fadeInUp stagger-1 card-3d">
                    <div class="flex items-center justify-between mb-6">
                        <h2 class="text-2xl font-bold text-gray-800">Progress Overview</h2>
                        <div class="text-right">
                            <div class="text-3xl font-bold gradient-text">@progressPercentage.ToString("F1")%</div>
                            <div class="text-sm text-gray-500">Complete</div>
                        </div>
                    </div>
                    
                    <!-- Enhanced Progress Bar -->
                    <div class="relative mb-6">
                        <div class="w-full bg-gray-200 rounded-full h-6 progress-animated">
                            <div class="bg-gradient-to-r from-purple-500 to-indigo-500 h-6 rounded-full transition-all duration-1000 animate-glow" 
                                 style="width: @progressPercentage%"></div>
                        </div>
                        <div class="flex justify-between text-sm text-gray-600 mt-2">
                            <span>$@Model?.CurrentAmount.ToString("N2")</span>
                            <span>$@Model?.TargetAmount.ToString("N2")</span>
                        </div>
                    </div>
                    
                    <!-- Amount Grid -->
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                        <div class="bg-gradient-to-br from-green-50 to-green-100 p-4 rounded-lg text-center">
                            <div class="text-2xl font-bold text-green-800">$@Model?.CurrentAmount.ToString("N2")</div>
                            <div class="text-xs text-green-600 font-semibold">Current Amount</div>
                        </div>
                        <div class="bg-gradient-to-br from-blue-50 to-blue-100 p-4 rounded-lg text-center">
                            <div class="text-2xl font-bold text-blue-800">$@((Model?.TargetAmount - Model?.CurrentAmount)?.ToString("N2"))</div>
                            <div class="text-xs text-blue-600 font-semibold">Remaining</div>
                        </div>
                        <div class="bg-gradient-to-br from-purple-50 to-purple-100 p-4 rounded-lg text-center">
                            <div class="text-2xl font-bold text-purple-800">$@Model?.TargetAmount.ToString("N2")</div>
                            <div class="text-xs text-purple-600 font-semibold">Target Amount</div>
                        </div>
                        <div class="bg-gradient-to-br from-orange-50 to-orange-100 p-4 rounded-lg text-center">
                            <div class="text-2xl font-bold text-orange-800">$@dailyTargetAmount.ToString("N2")</div>
                            <div class="text-xs text-orange-600 font-semibold">Daily Target</div>
                        </div>
                    </div>
                </div>

                <!-- Analytics Chart -->
                <div class="bg-white rounded-xl shadow-lg p-8 animate-fadeInUp stagger-2 card-3d">
                    <h2 class="text-2xl font-bold text-gray-800 mb-6">Savings Progress</h2>
                    <div class="chart-container">
                        <canvas id="progressChart" width="400" height="200"></canvas>
                    </div>
                </div>

                <!-- Goal Description -->
                @if (!string.IsNullOrEmpty(Model?.Description))
                {
                    <div class="bg-white rounded-xl shadow-lg p-8 animate-fadeInUp stagger-3 card-3d">
                        <h2 class="text-2xl font-bold text-gray-800 mb-4">About This Goal</h2>
                        <p class="text-gray-600 leading-relaxed">@Model.Description</p>
                    </div>
                }

                <!-- Recent Transactions -->
                <div class="bg-white rounded-xl shadow-lg p-8 animate-fadeInUp stagger-4 card-3d">
                    <div class="flex items-center justify-between mb-6">
                        <h2 class="text-2xl font-bold text-gray-800">Recent Transactions</h2>
                        <a asp-action="AddTransaction" asp-route-id="@Model?.Id" class="text-purple-600 hover:text-purple-800 font-semibold">
                            <i class="fas fa-plus mr-1"></i>Add Transaction
                        </a>
                    </div>
                    
                    <!-- Transaction Timeline -->
                    <div class="timeline">
                        <!-- Sample transactions - replace with actual data -->
                        <div class="timeline-item">
                            <div class="bg-green-50 p-4 rounded-lg">
                                <div class="flex justify-between items-center">
                                    <div>
                                        <div class="font-semibold text-green-800">Added $500.00</div>
                                        <div class="text-sm text-green-600">Monthly deposit</div>
                                    </div>
                                    <div class="text-sm text-gray-500">2 days ago</div>
                                </div>
                            </div>
                        </div>
                        <div class="timeline-item">
                            <div class="bg-blue-50 p-4 rounded-lg">
                                <div class="flex justify-between items-center">
                                    <div>
                                        <div class="font-semibold text-blue-800">Added $250.00</div>
                                        <div class="text-sm text-blue-600">Extra savings</div>
                                    </div>
                                    <div class="text-sm text-gray-500">1 week ago</div>
                                </div>
                            </div>
                        </div>
                        <div class="timeline-item">
                            <div class="bg-purple-50 p-4 rounded-lg">
                                <div class="flex justify-between items-center">
                                    <div>
                                        <div class="font-semibold text-purple-800">Goal Created</div>
                                        <div class="text-sm text-purple-600">Initial setup</div>
                                    </div>
                                    <div class="text-sm text-gray-500">@Model?.StartDate.ToString("MMM dd, yyyy")</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Column - Sidebar -->
            <div class="space-y-8">
                <!-- Goal Details Card -->
                <div class="bg-white rounded-xl shadow-lg p-6 animate-slideInRight stagger-1 card-3d">
                    <h3 class="text-xl font-bold text-gray-800 mb-4">Goal Details</h3>
                    <div class="space-y-4">
                        <div class="flex justify-between items-center py-2 border-b border-gray-100">
                            <span class="text-gray-600">Category</span>
                            <span class="font-semibold text-gray-800">@Model?.Category</span>
                        </div>
                        <div class="flex justify-between items-center py-2 border-b border-gray-100">
                            <span class="text-gray-600">Start Date</span>
                            <span class="font-semibold text-gray-800">@Model?.StartDate.ToString("MMM dd, yyyy")</span>
                        </div>
                        @if (Model?.TargetDate.HasValue == true)
                        {
                            <div class="flex justify-between items-center py-2 border-b border-gray-100">
                                <span class="text-gray-600">Target Date</span>
                                <span class="font-semibold text-gray-800">@Model.TargetDate.Value.ToString("MMM dd, yyyy")</span>
                            </div>
                            <div class="flex justify-between items-center py-2 border-b border-gray-100">
                                <span class="text-gray-600">Days Remaining</span>
                                <span class="font-semibold @(daysRemaining < 30 ? "text-red-600" : "text-gray-800")">
                                    @if (daysRemaining > 0)
                                    {
                                        <span>@daysRemaining days</span>
                                    }
                                    else if (daysRemaining == 0)
                                    {
                                        <span>Due Today!</span>
                                    }
                                    else
                                    {
                                        <span>@Math.Abs(daysRemaining) days overdue</span>
                                    }
                                </span>
                            </div>
                        }
                        <div class="flex justify-between items-center py-2">
                            <span class="text-gray-600">Created</span>
                            <span class="font-semibold text-gray-800">@Model?.StartDate.ToString("MMM dd, yyyy")</span>
                        </div>
                    </div>
                </div>

                <!-- Achievement Card -->
                <div class="bg-white rounded-xl shadow-lg p-6 animate-slideInRight stagger-2 card-3d">
                    <h3 class="text-xl font-bold text-gray-800 mb-4">Achievements</h3>
                    <div class="space-y-4">
                        @if (progressPercentage >= 25)
                        {
                            <div class="flex items-center space-x-3">
                                <div class="achievement-badge">
                                    <i class="fas fa-star"></i>
                                </div>
                                <div>
                                    <div class="font-semibold text-gray-800">Quarter Way There!</div>
                                    <div class="text-sm text-gray-600">Reached 25% of your goal</div>
                                </div>
                            </div>
                        }
                        @if (progressPercentage >= 50)
                        {
                            <div class="flex items-center space-x-3">
                                <div class="achievement-badge">
                                    <i class="fas fa-medal"></i>
                                </div>
                                <div>
                                    <div class="font-semibold text-gray-800">Halfway Hero!</div>
                                    <div class="text-sm text-gray-600">Reached 50% of your goal</div>
                                </div>
                            </div>
                        }
                        @if (progressPercentage >= 75)
                        {
                            <div class="flex items-center space-x-3">
                                <div class="achievement-badge">
                                    <i class="fas fa-trophy"></i>
                                </div>
                                <div>
                                    <div class="font-semibold text-gray-800">Almost There!</div>
                                    <div class="text-sm text-gray-600">Reached 75% of your goal</div>
                                </div>
                            </div>
                        }
                        @if (progressPercentage >= 100)
                        {
                            <div class="flex items-center space-x-3">
                                <div class="achievement-badge">
                                    <i class="fas fa-crown"></i>
                                </div>
                                <div>
                                    <div class="font-semibold text-gray-800">Goal Achieved!</div>
                                    <div class="text-sm text-gray-600">Congratulations on reaching your goal!</div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Smart Insights Card -->
                <div class="bg-white rounded-xl shadow-lg p-6 animate-slideInRight stagger-3 card-3d">
                    <h3 class="text-xl font-bold text-gray-800 mb-4">Smart Insights</h3>
                    <div class="space-y-4">
                        @if (daysRemaining > 0)
                        {
                            <div class="bg-blue-50 p-4 rounded-lg">
                                <div class="flex items-start space-x-3">
                                    <i class="fas fa-lightbulb text-blue-500 mt-1"></i>
                                    <div>
                                        <div class="font-semibold text-blue-800">Daily Target</div>
                                        <div class="text-sm text-blue-600">Save $@dailyTargetAmount.ToString("N2") daily to reach your goal on time.</div>
                                    </div>
                                </div>
                            </div>
                        }
                        
                        @if (progressPercentage < 50 && daysRemaining < 60)
                        {
                            <div class="bg-orange-50 p-4 rounded-lg">
                                <div class="flex items-start space-x-3">
                                    <i class="fas fa-exclamation-triangle text-orange-500 mt-1"></i>
                                    <div>
                                        <div class="font-semibold text-orange-800">Action Needed</div>
                                        <div class="text-sm text-orange-600">Consider increasing your savings rate to meet your deadline.</div>
                                    </div>
                                </div>
                            </div>
                        }
                        
                        @if (progressPercentage > 80)
                        {
                            <div class="bg-green-50 p-4 rounded-lg">
                                <div class="flex items-start space-x-3">
                                    <i class="fas fa-thumbs-up text-green-500 mt-1"></i>
                                    <div>
                                        <div class="font-semibold text-green-800">Great Progress!</div>
                                        <div class="text-sm text-green-600">You're doing excellent! Keep up the great work.</div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Quick Actions Card -->
                <div class="bg-white rounded-xl shadow-lg p-6 animate-slideInRight stagger-4 card-3d">
                    <h3 class="text-xl font-bold text-gray-800 mb-4">Quick Actions</h3>                    <div class="space-y-3">
                        <a asp-action="AddTransaction" asp-route-id="@Model.Id" class="w-full px-4 py-3 bg-gradient-to-r from-green-500 to-green-600 text-white rounded-lg hover:from-green-600 hover:to-green-700 hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-left flex items-center font-semibold border-0 opacity-100">
                            <i class="fas fa-plus-circle mr-3"></i>Add Transaction
                        </a>
                        <a asp-action="Analytics" class="w-full px-4 py-3 bg-gradient-to-r from-indigo-500 to-purple-600 text-white rounded-lg hover:from-indigo-600 hover:to-purple-700 hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-left flex items-center font-semibold border-0 opacity-100">
                            <i class="fas fa-chart-bar mr-3"></i>View Analytics
                        </a>
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="w-full px-4 py-3 bg-gradient-to-r from-blue-500 to-cyan-600 text-white rounded-lg hover:from-blue-600 hover:to-cyan-700 hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-left flex items-center font-semibold border-0 opacity-100">
                            <i class="fas fa-edit mr-3"></i>Edit Goal
                        </a>
                        <button class="w-full px-4 py-3 bg-gradient-to-r from-purple-500 to-pink-600 text-white rounded-lg hover:from-purple-600 hover:to-pink-700 hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-left flex items-center font-semibold border-0 opacity-100">
                            <i class="fas fa-bell mr-3"></i>Set Reminder
                        </button>
                        <button class="w-full px-4 py-3 bg-gradient-to-r from-orange-500 to-red-600 text-white rounded-lg hover:from-orange-600 hover:to-red-700 hover:shadow-lg transform hover:scale-105 transition-all duration-300 text-left flex items-center font-semibold border-0 opacity-100">
                            <i class="fas fa-share-alt mr-3"></i>Share Progress
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Enhanced JavaScript functionality -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize chart
    initializeProgressChart();
    
    // Setup interactive features
    setupQuickActions();
    setupAnimations();
});

function initializeProgressChart() {
    const ctx = document.getElementById('progressChart').getContext('2d');
    
    // Sample data - replace with actual transaction data
    const sampleData = {
        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
        datasets: [{
            label: 'Savings Progress',
            data: [500, 1200, 2000, 2800, 3500, @Model?.CurrentAmount],
            borderColor: 'rgb(139, 92, 246)',
            backgroundColor: 'rgba(139, 92, 246, 0.1)',
            borderWidth: 3,
            fill: true,
            tension: 0.4
        }, {
            label: 'Target',
            data: Array(6).fill(@Model?.TargetAmount),
            borderColor: 'rgb(99, 102, 241)',
            backgroundColor: 'transparent',
            borderWidth: 2,
            borderDash: [5, 5],
            fill: false
        }]
    };
    
    new Chart(ctx, {
        type: 'line',
        data: sampleData,
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'top',
                    labels: {
                        usePointStyle: true,
                        padding: 20
                    }
                },
                tooltip: {
                    mode: 'index',
                    intersect: false,
                    backgroundColor: 'rgba(0, 0, 0, 0.8)',
                    titleColor: 'white',
                    bodyColor: 'white',
                    borderColor: 'rgba(139, 92, 246, 0.8)',
                    borderWidth: 1
                }
            },
            scales: {
                x: {
                    display: true,
                    title: {
                        display: true,
                        text: 'Time Period'
                    },
                    grid: {
                        color: 'rgba(0, 0, 0, 0.1)'
                    }
                },
                y: {
                    display: true,
                    title: {
                        display: true,
                        text: 'Amount ($)'
                    },
                    grid: {
                        color: 'rgba(0, 0, 0, 0.1)'
                    },
                    ticks: {
                        callback: function(value) {
                            return '$' + value.toLocaleString();
                        }
                    }
                }
            },
            interaction: {
                mode: 'nearest',
                axis: 'x',
                intersect: false
            }
        }
    });
}

function setupQuickActions() {
    // Add Funds functionality
    document.getElementById('addFundsBtn')?.addEventListener('click', function() {
        // Implement add funds modal or redirect
        window.location.href = '@Url.Action("AddTransaction", "Savings", new { id = Model?.Id })';
    });
    
    // Share functionality
    document.getElementById('shareBtn')?.addEventListener('click', function() {
        if (navigator.share) {
            navigator.share({
                title: '@Model?.Name',
                text: 'Check out my savings progress!',
                url: window.location.href
            });
        } else {
            // Fallback for browsers that don't support Web Share API
            copyToClipboard(window.location.href);
            alert('Link copied to clipboard!');
        }
    });
}

function setupAnimations() {
    // Add intersection observer for scroll animations
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate-fadeInUp');
            }
        });
    });
    
    document.querySelectorAll('.card-3d').forEach(card => {
        observer.observe(card);
    });
}

function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(function() {
        console.log('Copying to clipboard was successful!');
    }, function(err) {
        console.error('Could not copy text: ', err);
    });
}
</script>